@model IEnumerable<DevXuongMoc.Models.Customer>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admins/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Index</h1>

<form class="form-inline" asp-action="Index" method="get">
    <div class="input-group">
        <a style="margin-right:20ppx" class="btn btn-success" asp-action="Create">
            <i class="fas fa-plus"></i> Thêm Mới
        </a>
        <input style="margin-left:20px" type="text" name="search" class="form-control" placeholder="Tìm kiếm theo tên..." value="@ViewData["SearchQuery"]" />
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">Tìm Kiếm</button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Isactive)
            </th>
            <th>Chức Năng</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
                <td>
                    @if (item.Isactive == true)
                    {
                        <span style="color: green;">Đang hoạt động</span>
                    }
                    else
                    {
                        <span style="color: red;">Đang khóa</span>
                    }
                </td>
                <td class="text-center">
                    <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">
                        <i class="fas fa-eye"></i>
                    </a>
                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Bạn có chắc chắn muốn xóa không?');">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </form>
                </td>

        </tr>
}
    </tbody>
</table>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.delete-button').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.getAttribute('data-id');
                if (confirm('Bạn có chắc chắn muốn xóa không?')) {
                    fetch(`/Admins/ControllerName/Delete/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name=__RequestVerificationToken]').value
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                alert('Xóa thành công!');
                                location.reload();
                            } else {
                                alert('Có lỗi xảy ra khi xóa.');
                            }
                        });
                }
            });
        });
    });
</script>
